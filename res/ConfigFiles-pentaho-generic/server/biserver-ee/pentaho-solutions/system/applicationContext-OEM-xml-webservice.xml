<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd 
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-2.0.xsd" default-lazy-init="true">

<!-- #######################################  Customer Specific Items        ############################## -->


<util:list id="hideTheseForTenants">     <!--  enumerate top-level folders to hide for SSO users with AccessVoter -->
      <value>public</value>
      <value>home</value>
</util:list>


<util:list id="datasourcesToModify">     <!--  enumerate datasources to modify with IDBDatasourceService  -->
      <value>DSNAMES_HERE_OR_*_FOR ALL</value>
</util:list>


  <util:map id="customerSpecificValueMap">
      <!--  these are used by OEM classes -->
      <entry key="tenantVar"               value="tenantName" />
      <entry key="tenantTop"               value="Tenants" />
      <entry key="noCreateHomeRole"        value="SSOUser" />
      <entry key="sharedFolder"            value="Standard" />
      <entry key="hideTheseForTenants"     value-ref="hideTheseForTenants" />
      <entry key="sessionVariableToAppend" value="tenantName" />
      <entry key="datasourcesToModify"     value-ref="datasourcesToModify" />

      <!-- the following are used by customer-specific helpers only  -->
  </util:map>


  <bean id="tenantManagerHelper" class="com.customerspecific.CustomTenantManagerHelper">
    <property name="customerSpecificValueMap" ref="customerSpecificValueMap" />
  </bean>

 <bean id="voterHelper" class="com.customerspecific.CustomVoterHelper">
    <property name="customerSpecificValueMap" ref="customerSpecificValueMap" />
  </bean>

   <bean id="ssoFilterHelper" class="com.customerspecific.CustomFilterHelper">
       <property name="customerSpecificValueMap" ref="customerSpecificValueMap" />
        <property name="parameterName"   value="secret" />
        <property name="whereIsTheToken" value="parameter" />
   <!-- 
        <property name="parameterName"   value="ids_sso" />
        <property name="whereIsTheToken" value="cookie" />
   -->
   <!-- 
        <property name="parameterName"   value="puser" />
        <property name="whereIsTheToken" value="header" />
    -->
   </bean>


    <!--  XML Webservice response -->
	<bean id="webServiceParser" class="com.customerspecific.CustomXmlWebServiceParser">
		<property name="roleTags">
			<list>
				<value>roles/role</value>
			</list>
		</property>
		<property name="variableTags">
			<list>
				<value>tenantid</value>
				<value>tenantName</value>
			</list>
		</property>
	</bean>

<!-- #######################################  End of Customer Specific Items        ############################## -->


<!-- #######################################  Filters ... added to the chain                 ############################## -->
  


   <bean id="ssoProcessingFilter" class="com.pentaho.oem.sk.filters.OEMGenericSSOFilter">
        <property name="authenticationManager">
            <ref bean="authenticationManager" />
        </property>
        <property name="filterHelper">
            <ref bean="ssoFilterHelper" />
        </property>
    </bean>


<!-- #######################################  Authenication Providers ...  used by filters   ############################## -->

   <bean id="oemAuthenticationProvider" class="com.pentaho.oem.sk.authentication.OEMAuthenticationProvider">
        <property name="userDetailsService">
            <ref bean="oemMultiUserDetailsService" />
        </property>
   </bean>

<!-- #######################################  UserDetails and Role List Services  ############################## -->


<!--  ################################### Webservice UserDetails -->
       <util:map id="webserviceRoleMap">
            <entry key="Admin" value="Administrator"/>
        </util:map>

        <bean id="webserviceRoleMapper" class="org.pentaho.platform.engine.security.DefaultJdbcRoleMapper">
           <constructor-arg>
                 <ref local="webserviceRoleMap"/>
           </constructor-arg>
        </bean>


    <bean id="webserviceUserDetailsService" class="com.pentaho.oem.sk.userrole.webservice.OEMWebServiceUserDetailsService">
        <property name="webServiceParser" ref="webServiceParser" />
    
        <property name="serviceURLs">
           <list>
              <value>file:///@@@PENTAHO_HOME@@@/sample-xml-sso/{secret}.xml</value>
           </list>
        </property>
        <property name="roleMapper" ref="webserviceRoleMapper" />

        <constructor-arg ref="tenantedUserNameUtils"/>
    </bean>




<!--  ################################### Webservice UserRoleList -->

    <bean id="webserviceUserRoleListService" class="com.pentaho.oem.sk.userrole.webservice.OEMWebServiceUserRoleListService">
    <constructor-arg ref="tenantedUserNameUtils"/>
        <property name="webServiceParser" ref="webServiceParser" />
       <property name="parentUserDetailsService" ref="cachingMultiUserDetailsService" />
       <property name="urlAllRoles" value="file:///@@@PENTAHO_HOME@@@/sample-xml-sso/allroles.xml"/>
        <property name="urlAllUsers" value="file:///@@@PENTAHO_HOME@@@/sample-xml-sso/allusers.xml"/>
        <property name="urlUsersInRole" value="file:///@@@PENTAHO_HOME@@@/sample-xml-sso/usersinrole.xml"/>
    </bean>




<!-- #######################################  Multi (proxy) UserDetails and Role List Services - invoke by Auth Providers & others  ############################## -->

<!-- ############################### Multi Details Service -->
   <bean id="oemMultiUserDetailsService" class="com.pentaho.oem.sk.userrole.OEMMultiUserDetailsService">
        <property name="userDetailsServices">
           <list>
            <ref bean="webserviceUserDetailsService" />
            <ref bean="UserDetailsService" />
           </list>
        </property>
<!-- remove this if you want it to be a primary, non caching implementation (sub services can cache if they want)
    <pen:publish as-type="INTERFACES">
      <pen:attributes>
        <pen:attr key="priority" value="50"/>
      </pen:attributes>
    </pen:publish>
-->
   </bean>


<!--   this is a caching implementation of the Multi-user details service  -->
  <bean id="cachingMultiUserDetailsService" class="org.pentaho.platform.plugin.services.security.userrole.PentahoCachingUserDetailsService">
    <constructor-arg>
      <ref bean="oemMultiUserDetailsService"/> 
    </constructor-arg>
    <constructor-arg ref="tenantedUserNameUtils"/>

    <property name="userCache" ref="ehCacheUserCache"/>   <!-- declared in pentahoObjects.spring.xml - create your own, if you use that cache there -->

    <pen:publish as-type="INTERFACES">
      <pen:attributes>
        <pen:attr key="priority" value="50"/>
      </pen:attributes>
    </pen:publish>
  </bean>

<!-- ############################### Multi Role List Service -->
   <bean id="oemMultiUserRoleListService" class="com.pentaho.oem.sk.userrole.OEMMultiUserRoleListService">
        <constructor-arg ref="tenantedUserNameUtils"/>
        <property name="userRoleListServices">
           <list>
            <ref bean="webserviceUserRoleListService" />
            <ref bean="userRoleListService" />
           </list>
        </property>
    <pen:publish as-type="INTERFACES">
      <pen:attributes>
        <pen:attr key="priority" value="50"/>
      </pen:attributes>
    </pen:publish>
   </bean>


</beans>
